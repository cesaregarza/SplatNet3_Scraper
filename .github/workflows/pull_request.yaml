name: Pull Request Checks

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_image: ["python:3.10-slim", "python:3.11-slim"]
    env:
      default_image: "python:3.10-slim"
      temp_build_version: "0.0.0"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Check for changes
        id: check_changes
        run: |
          git fetch origin ${{ github.base_ref }}
          CHANGES=$(git diff --name-only origin/${{ github.base_ref }}..${{ github.sha }} -- 'src/')
          if [ -n "$CHANGES" ]; then
            echo "Changes detected in src/ directory"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes detected in src/ directory"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache Poetry Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Build and Test
        if: steps.check_changes.outputs.has_changes == 'true'
        run: |
          docker build \
          --build-arg PYTHON_IMAGE=${{ matrix.python_image }} \
          --build-arg BUILD_VERSION=${{ env.temp_build_version }} \
          --target test \
          --tag my-image:PR-${{ github.run_number }} \
          .
          docker run --name test-container my-image:PR-${{ github.run_number }}

      - name: Cleanup
        run: |
          docker rmi my-image:PR-${{ github.run_number }} --force
          rm -rf temp-dist
