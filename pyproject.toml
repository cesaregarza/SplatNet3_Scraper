[tool.poetry]
name = "splatnet3_scraper"
version = "1.0.0"
description = "Scraper for SplatNet 3 for Splatoon 3"
authors = ["Cesar E Garza <cesar@cegarza.com>"]
readme = "README.md"
packages = [{include = "splatnet3_scraper", from = "src"}]
license = "GPL-3.0-or-later"

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.28.1"
pyarrow = {version = "^10.0.1", optional = true, extras = ["parquet"]}
pandas = {version = "^1.5.3", optional = true, extras = ["examples"]}
sqlalchemy = {version = "^2.0.1", optional = true, extras = ["examples"]}
psycopg2 = {version = "^2.9.5", optional = true, extras = ["examples"]}

[tool.poetry.extras]
parquet = ["pyarrow"]
examples = ["pandas", "sqlalchemy", "psycopg2"]
all = ["parquet", "examples"]

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
mypy = "^0.991"
flake8 = "^6.0.0"
darglint = "^1.8.1"
isort = "^5.11.4"
types-requests = "^2.28.11.7"
pytest = "^7.2.0"
coverage = "^7.0.4"
ipykernel = "^6.19.4"
genson = "^1.2.2"
line-profiler = "^4.0.2"
pytest-lazy-fixture = "^0.6.3"
freezegun = "^1.2.2"
pytest-mock = "^3.10.0"
genbadge = {extras = ["all"], version = "^1.1.0"}
pytest-html = "^3.2.0"
sphinx = "^6.1.3"
ipython = "^8.9.0"



[tool.poetry.group.docs.dependencies]
sphinx-immaterial = "^0.11.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 80
target-version = ['py310']

[tool.isort]
profile = "black"
line_length = 80
skip_glob = "^(tests|src/splatnet3_scraper)"

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
pretty = true
exclude = [".venv", "tests", "docs", "examples"]

[tool.pytest.ini_options]
testpaths = "tests"
addopts = [
    "-v",
    "--tb=auto",
    "--showlocals",
    "--color=yes",
    "-k not production",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "internet: marks tests as requiring internet access (deselect with '-m \"not internet\"')",
    "production: marks tests as only running in production (deselect with '-m \"not production\"')",
]
pythonpath = [
    "src"
]
